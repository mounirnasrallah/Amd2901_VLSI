--
-- Generated by VASY
--
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

library cells;
use cells.all;

ENTITY muxe IS
PORT(
  accu	: IN STD_LOGIC_VECTOR(3 DOWNTO 0);
  d	: IN STD_LOGIC_VECTOR(3 DOWNTO 0);
  i	: IN STD_LOGIC_VECTOR(2 DOWNTO 0);
  r	: OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
  ra	: IN STD_LOGIC_VECTOR(3 DOWNTO 0);
  rb	: IN STD_LOGIC_VECTOR(3 DOWNTO 0);
  s	: OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
  vdd	: IN STD_LOGIC;
  vss	: IN STD_LOGIC
);
END muxe;

ARCHITECTURE RTL OF muxe IS
  SIGNAL not_accu	: STD_LOGIC_VECTOR(2 DOWNTO 2);
  SIGNAL not_i	: STD_LOGIC_VECTOR(2 DOWNTO 0);
  SIGNAL on12_x1_sig	: STD_LOGIC;
  SIGNAL on12_x1_4_sig	: STD_LOGIC;
  SIGNAL on12_x1_3_sig	: STD_LOGIC;
  SIGNAL on12_x1_2_sig	: STD_LOGIC;
  SIGNAL o2_x2_sig	: STD_LOGIC;
  SIGNAL not_aux4	: STD_LOGIC;
  SIGNAL not_aux1	: STD_LOGIC;
  SIGNAL not_aux0	: STD_LOGIC;
  SIGNAL na3_x1_sig	: STD_LOGIC;
  SIGNAL na3_x1_5_sig	: STD_LOGIC;
  SIGNAL na3_x1_4_sig	: STD_LOGIC;
  SIGNAL na3_x1_3_sig	: STD_LOGIC;
  SIGNAL na3_x1_2_sig	: STD_LOGIC;
  SIGNAL na2_x1_sig	: STD_LOGIC;
  SIGNAL na2_x1_5_sig	: STD_LOGIC;
  SIGNAL na2_x1_4_sig	: STD_LOGIC;
  SIGNAL na2_x1_3_sig	: STD_LOGIC;
  SIGNAL na2_x1_2_sig	: STD_LOGIC;
  SIGNAL inv_x2_sig	: STD_LOGIC;
  SIGNAL inv_x2_4_sig	: STD_LOGIC;
  SIGNAL inv_x2_3_sig	: STD_LOGIC;
  SIGNAL inv_x2_2_sig	: STD_LOGIC;
  SIGNAL aux5	: STD_LOGIC;
  SIGNAL aux3	: STD_LOGIC;
  SIGNAL aux2	: STD_LOGIC;
  SIGNAL a3_x2_sig	: STD_LOGIC;

  COMPONENT nao2o22_x1
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  i2	: IN STD_LOGIC;
  i3	: IN STD_LOGIC;
  nq	: OUT STD_LOGIC;
  vdd	: IN STD_LOGIC;
  vss	: IN STD_LOGIC
   );
  END COMPONENT;

  COMPONENT inv_x2
  PORT(
  i	: IN STD_LOGIC;
  nq	: OUT STD_LOGIC;
  vdd	: IN STD_LOGIC;
  vss	: IN STD_LOGIC
   );
  END COMPONENT;

  COMPONENT oa2a22_x2
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  i2	: IN STD_LOGIC;
  i3	: IN STD_LOGIC;
  q	: OUT STD_LOGIC;
  vdd	: IN STD_LOGIC;
  vss	: IN STD_LOGIC
   );
  END COMPONENT;

  COMPONENT oa22_x2
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  i2	: IN STD_LOGIC;
  q	: OUT STD_LOGIC;
  vdd	: IN STD_LOGIC;
  vss	: IN STD_LOGIC
   );
  END COMPONENT;

  COMPONENT a3_x2
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  i2	: IN STD_LOGIC;
  q	: OUT STD_LOGIC;
  vdd	: IN STD_LOGIC;
  vss	: IN STD_LOGIC
   );
  END COMPONENT;

  COMPONENT na3_x1
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  i2	: IN STD_LOGIC;
  nq	: OUT STD_LOGIC;
  vdd	: IN STD_LOGIC;
  vss	: IN STD_LOGIC
   );
  END COMPONENT;

  COMPONENT on12_x1
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  q	: OUT STD_LOGIC;
  vdd	: IN STD_LOGIC;
  vss	: IN STD_LOGIC
   );
  END COMPONENT;

  COMPONENT na2_x1
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  nq	: OUT STD_LOGIC;
  vdd	: IN STD_LOGIC;
  vss	: IN STD_LOGIC
   );
  END COMPONENT;

  COMPONENT o2_x2
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  q	: OUT STD_LOGIC;
  vdd	: IN STD_LOGIC;
  vss	: IN STD_LOGIC
   );
  END COMPONENT;

  COMPONENT an12_x1
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  q	: OUT STD_LOGIC;
  vdd	: IN STD_LOGIC;
  vss	: IN STD_LOGIC
   );
  END COMPONENT;

  COMPONENT no2_x1
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  nq	: OUT STD_LOGIC;
  vdd	: IN STD_LOGIC;
  vss	: IN STD_LOGIC
   );
  END COMPONENT;

  COMPONENT a2_x2
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  q	: OUT STD_LOGIC;
  vdd	: IN STD_LOGIC;
  vss	: IN STD_LOGIC
   );
  END COMPONENT;

BEGIN
  r_3_ins : nao2o22_x1
  PORT MAP (
    i0 => inv_x2_4_sig,
    i1 => not_aux4,
    i2 => inv_x2_3_sig,
    i3 => i(2),
    nq => r(3),
    vdd => vdd,
    vss => vss
  );
  inv_x2_4_ins : inv_x2
  PORT MAP (
    i => d(3),
    nq => inv_x2_4_sig,
    vdd => vdd,
    vss => vss
  );
  inv_x2_3_ins : inv_x2
  PORT MAP (
    i => aux2,
    nq => inv_x2_3_sig,
    vdd => vdd,
    vss => vss
  );
  r_2_ins : oa2a22_x2
  PORT MAP (
    i0 => ra(2),
    i1 => aux5,
    i2 => inv_x2_2_sig,
    i3 => d(2),
    q => r(2),
    vdd => vdd,
    vss => vss
  );
  inv_x2_2_ins : inv_x2
  PORT MAP (
    i => not_aux4,
    nq => inv_x2_2_sig,
    vdd => vdd,
    vss => vss
  );
  r_1_ins : oa22_x2
  PORT MAP (
    i0 => aux5,
    i1 => ra(1),
    i2 => a3_x2_sig,
    q => r(1),
    vdd => vdd,
    vss => vss
  );
  a3_x2_ins : a3_x2
  PORT MAP (
    i0 => d(1),
    i1 => i(2),
    i2 => aux3,
    q => a3_x2_sig,
    vdd => vdd,
    vss => vss
  );
  r_0_ins : oa2a22_x2
  PORT MAP (
    i0 => ra(0),
    i1 => aux5,
    i2 => inv_x2_sig,
    i3 => d(0),
    q => r(0),
    vdd => vdd,
    vss => vss
  );
  inv_x2_ins : inv_x2
  PORT MAP (
    i => not_aux4,
    nq => inv_x2_sig,
    vdd => vdd,
    vss => vss
  );
  s_3_ins : na3_x1
  PORT MAP (
    i0 => on12_x1_4_sig,
    i1 => na3_x1_5_sig,
    i2 => na2_x1_5_sig,
    nq => s(3),
    vdd => vdd,
    vss => vss
  );
  on12_x1_4_ins : on12_x1
  PORT MAP (
    i0 => accu(3),
    i1 => not_aux1,
    q => on12_x1_4_sig,
    vdd => vdd,
    vss => vss
  );
  na3_x1_5_ins : na3_x1
  PORT MAP (
    i0 => rb(3),
    i1 => i(0),
    i2 => not_i(2),
    nq => na3_x1_5_sig,
    vdd => vdd,
    vss => vss
  );
  na2_x1_5_ins : na2_x1
  PORT MAP (
    i0 => i(2),
    i1 => aux2,
    nq => na2_x1_5_sig,
    vdd => vdd,
    vss => vss
  );
  s_2_ins : na3_x1
  PORT MAP (
    i0 => na2_x1_4_sig,
    i1 => o2_x2_sig,
    i2 => na3_x1_4_sig,
    nq => s(2),
    vdd => vdd,
    vss => vss
  );
  na2_x1_4_ins : na2_x1
  PORT MAP (
    i0 => ra(2),
    i1 => not_aux0,
    nq => na2_x1_4_sig,
    vdd => vdd,
    vss => vss
  );
  o2_x2_ins : o2_x2
  PORT MAP (
    i0 => not_accu(2),
    i1 => not_aux1,
    q => o2_x2_sig,
    vdd => vdd,
    vss => vss
  );
  na3_x1_4_ins : na3_x1
  PORT MAP (
    i0 => rb(2),
    i1 => not_i(2),
    i2 => na2_x1_3_sig,
    nq => na3_x1_4_sig,
    vdd => vdd,
    vss => vss
  );
  na2_x1_3_ins : na2_x1
  PORT MAP (
    i0 => not_accu(2),
    i1 => not_i(0),
    nq => na2_x1_3_sig,
    vdd => vdd,
    vss => vss
  );
  s_1_ins : na3_x1
  PORT MAP (
    i0 => na2_x1_2_sig,
    i1 => on12_x1_3_sig,
    i2 => na3_x1_3_sig,
    nq => s(1),
    vdd => vdd,
    vss => vss
  );
  na2_x1_2_ins : na2_x1
  PORT MAP (
    i0 => ra(1),
    i1 => not_aux0,
    nq => na2_x1_2_sig,
    vdd => vdd,
    vss => vss
  );
  on12_x1_3_ins : on12_x1
  PORT MAP (
    i0 => accu(1),
    i1 => not_aux1,
    q => on12_x1_3_sig,
    vdd => vdd,
    vss => vss
  );
  na3_x1_3_ins : na3_x1
  PORT MAP (
    i0 => rb(1),
    i1 => i(0),
    i2 => not_i(2),
    nq => na3_x1_3_sig,
    vdd => vdd,
    vss => vss
  );
  s_0_ins : na3_x1
  PORT MAP (
    i0 => na2_x1_sig,
    i1 => na3_x1_2_sig,
    i2 => na3_x1_sig,
    nq => s(0),
    vdd => vdd,
    vss => vss
  );
  na2_x1_ins : na2_x1
  PORT MAP (
    i0 => ra(0),
    i1 => not_aux0,
    nq => na2_x1_sig,
    vdd => vdd,
    vss => vss
  );
  na3_x1_2_ins : na3_x1
  PORT MAP (
    i0 => accu(0),
    i1 => not_i(0),
    i2 => on12_x1_2_sig,
    nq => na3_x1_2_sig,
    vdd => vdd,
    vss => vss
  );
  on12_x1_2_ins : on12_x1
  PORT MAP (
    i0 => not_aux0,
    i1 => ra(0),
    q => on12_x1_2_sig,
    vdd => vdd,
    vss => vss
  );
  na3_x1_ins : na3_x1
  PORT MAP (
    i0 => rb(0),
    i1 => not_i(2),
    i2 => on12_x1_sig,
    nq => na3_x1_sig,
    vdd => vdd,
    vss => vss
  );
  on12_x1_ins : on12_x1
  PORT MAP (
    i0 => not_i(0),
    i1 => accu(0),
    q => on12_x1_sig,
    vdd => vdd,
    vss => vss
  );
  aux2_ins : an12_x1
  PORT MAP (
    i0 => i(1),
    i1 => ra(3),
    q => aux2,
    vdd => vdd,
    vss => vss
  );
  aux3_ins : na2_x1
  PORT MAP (
    i0 => not_i(1),
    i1 => not_i(0),
    nq => aux3,
    vdd => vdd,
    vss => vss
  );
  aux5_ins : no2_x1
  PORT MAP (
    i0 => i(1),
    i1 => i(2),
    nq => aux5,
    vdd => vdd,
    vss => vss
  );
  not_i_0_ins : inv_x2
  PORT MAP (
    i => i(0),
    nq => not_i(0),
    vdd => vdd,
    vss => vss
  );
  not_i_1_ins : inv_x2
  PORT MAP (
    i => i(1),
    nq => not_i(1),
    vdd => vdd,
    vss => vss
  );
  not_i_2_ins : inv_x2
  PORT MAP (
    i => i(2),
    nq => not_i(2),
    vdd => vdd,
    vss => vss
  );
  not_accu_2_ins : inv_x2
  PORT MAP (
    i => accu(2),
    nq => not_accu(2),
    vdd => vdd,
    vss => vss
  );
  not_aux0_ins : a2_x2
  PORT MAP (
    i0 => i(2),
    i1 => not_i(1),
    q => not_aux0,
    vdd => vdd,
    vss => vss
  );
  not_aux1_ins : o2_x2
  PORT MAP (
    i0 => i(0),
    i1 => not_aux0,
    q => not_aux1,
    vdd => vdd,
    vss => vss
  );
  not_aux4_ins : on12_x1
  PORT MAP (
    i0 => aux3,
    i1 => not_i(2),
    q => not_aux4,
    vdd => vdd,
    vss => vss
  );
END RTL;
